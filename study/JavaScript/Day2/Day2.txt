✔ 자바스크립트 대화상자

- alert() 
    //비표준은 내 화면에서만 보이고 다른 사용자에게 안보이는 경우도 있다
    사용자에게 메시지를 보여주고, 확인을 기다림
    BOM(Browser Object Model)
        window.alert()
        alert();

- confirm()
    사용자에게 메시지를 보여주고, 확인이나 취소를 누르면 그 결과를 불린값으로 반환(선택창이 2개로 보이는 - 반응형)
        const result = confirm('확인이나 취소를 누르세요)

- prompt() 
    사용자에게 메시지를 보여주고, 사용자가 입력한 문자열을 반환
    // 자바에서의 scanner 역할과 유사하다
    ❗ 입력받은 값은 문자형으로 저장된다
        const result = prompt('문자를 입력하세요'); 

✔ 문제.
이름과 국어점수, 수학점수, 영어점수를 입력받아 총점과 평균을 구하는 문서를 작성
(단,prompt를 사용해서 console에 결과를 출력)


✔ 연산자(Operate)

1. 산술 연산자
+, -, *, /, %, **(제곱)
    2 ** 2

2. 비교 연산자
>, < >=, <=, ==, != , ===(두 식 값이 같고, 타입까지 같으면 참),
!== (두 식의 값이 다르고, 타입까지 다르면 참)
    '3' * '3' = 9
    '3' == 3 -> true (자바스크립트)
    '3' === 3 -> false (형이 다르기 때문 - 자바스크립트)

3. 대입 연산자
=, +=, -=, *=, /=, %=, **=

4. 증감 연산자
++변수, --변수, 변수++, 변수--

5. 논리 연산자
&&, ||, !

6. 비트 연산자
&, |, ^, <<, >>

7. 삼항 연산자
    변수 = 조건식 ? 반환값1 : 반환값2


✔ 제어문

1. 조건문

    if 문
    if(조건식){
        조건식의 결과가 true일 때 실행할 문장;
        ...
    }

    if~else 문
      if(조건식){
        조건식의 결과가 true일 때 실행할 문장;
        ...
    }else{
        조건식의 결과가 false일 때 실행할 문장;
    }

    if~else if~else문
       if(조건식1){
        조건식의 결과가 true일 때 실행할 문장;
        ...
    }else if(조건식2){
        조건식2 결과가 true일 때 실행할 문장;
    }
    ...
    }else{
        모든 조건식의 결과가 false일 때 실행할 문장;
    }


    switch 문
    switch(변수){
        case 값1:
        변수롸 값1이 같을 경우 실행할 문장;
        ...
        break;
         case 값2:
        변수롸 값2이 같을 경우 실행할 문장;
        ...
        break;
        ...
        default:
        변수와 모든 값이 다를 경우 실행할 문장;
        ...
    }

2. 반복문

    while 문

    while(조건식){
        조건식의 결과가 true인 동안 반복할 문장;
        ...
    }

    do ~ while 문

    do{
        조건식의 결과가 true인 동안 반복할 문장;
        ...
    }while(조건식);


    for 문

    for(초기값; 조건식; 증감식){
        조건식의 결과가 true인 동안 반복할 문장;
        ...
    }


continue 문
- 반복중인 루트 내에서 사용하여 해당 루프의 나머지 부분을 건너뛰고 다음 조건식의 판단으로 넘어감

break 문
- switch문 또는 반복중인 루프 내에서 사용하여 해당 문장을 완전히 종료시키고 다음에 위치한 실행문으로 이동



✔ 배열(Array)
- 이름과 index로 참조되는 정렬된 값의 집합(자료구조)
- 배열을 구성하는 각각의 값을 배열 요소라고 하며, 배열에서의 위치를 가리키는 숫자를 인덱스라고 함

배열 선언
let 배열명;

배열 초기화
배열명 = [요소1, 요소2, 요소3 ....];

    let arr;
    arr =[ 100, 200, 300];
    
    let arr = [100,2 00, 300];


배열 객체로 생성
    let 배열명 = new Array(요소1, 요소2....)  

자바스크립트 배열의 특징
1. 배열 요소의 타입이 고정되어 있지 않음
    let arr = [1, 1.5, '김사과', true]
     // 자바는 요소 타입이 동일해야 하지만 자바스크림트는 아니다.

2. 배열 요소의 인덱스가 연속적이지 않아도 됨
    let arr;
    arr[0] = 1; 
    arr[1] = 2;
    arr[4] = 5; // 연속적이지 않아도 된다. 
    ❗ arr[2](index2), arr[3](index2) 은 undefined가 된다.
    // 처음 선언간 어떤것이 들어갈지 모르지만 배열을 넣어 배열로 사용할 수 있다


Array 객체의 메소드
push() : 배열의 요소로 추가
pop() : 배열의 마지막 주소에 있는 값을 제거
shhift() : 배열의 첫번재 주소에 있는 값을 제거
concat() : 두 개의 배열을 합침
join() : 배열 요소 사이에 원하는 문자를 삽입
reverse() : 배열을 역순으로 재배치
sort() : 배열을 오름차순으로 정렬 // 내림차순으로 따로 만들어야한다.


배열을 이용한 반복

user = {'userid : 'apple', 'name' : '김사과'} // 2번 돔
        ------------------
            property


for in 문 : 변수에 배열의 인덱스 또는 객체의 key가 저장
    for(변수 in 객체){ // 인덱스가 변수에 들어간다, 0, 1, 2....
        객체의 property(ex-'userid : 'apple') 개수만큼 반복할 실행문
    }


for of 문 : 변수에 배열의 값 또는 객체의 value가 저장
    for(변수 in 객체){ // 
        객체의 property(ex-'apple') 개수만큼 반복할 실행문
    }


forEach 문 : 배열에서만 사용 가능

     let arr = [100, 200, 300];

    배열명.forEach(function(변수1, 변수2, 변수3){
        배열의 요서 개수만큼 반복할 실행문;
        ...
    });

    - 변수1 : 값(value) //100 -> 200 -> 300
    - 변수2 : 번호(index) // 0 -> 1 -> 2
    - 변수3 : 배열객체 // [100, 200, 300] -> [100, 200, 300] -> [100, 200, 300]

문제.
원하는 개수만ㅌ큼 숫자를 입력받아 오름차순으로 정렬하는 문서를 만들어보자.
(단, 입력은 prompt를 사용, 출력은 console)

    입력받을 숫자의 개수를 입력하세요(prompt)

    1번째 숫자를 입력하세요
    2번째 숫자를 입력하세요
    ...
    5번째 숫자를 입력하세요

    10 20 30 40 50

사용자 정의 함수(function)
- 하나의 특별한 목적의 작업을 수행하도록 설계된 독립적인 블록
- 필요할 때마다 호출하여 해당 작업을 반복해서 수행할 수 있음(코드를 재활용)

1. 함수 선언식
    function 함수명(매개변수1, 매개변수2...){
        함수가 호출되었을 때 실행할 문장;
        ...
        return 값;
    }

    함수명(값1, 값2..); -> 호이스팅 발생

2. 함수 표현식
    let 변수명 = function(매개변수1, 매개변수2...)
        함수가 호출되었을 때 실행할 문장;
        ...
        return 값;
    }

    변수명(값1, 값2..);


나머지 매개변수
생략 접두사(...)를 사용하여 특정 위치의 인수부터 마지막 인수까지 한 번에 지정할 수 있음

    function 함수명(매개변수1, ...매개변수2){
        함수가 호출되었을 때 실행할 문장;
        ...
        return 값;
    }

    함수명(값1, 값2, 값3, 값4, 값5);
    // 값1은 매개변수1에 들어가고 나머지 값들은 매개변수2에 배열의 형태로 저장하게 된다.


디폴트 매개변수
매개변수의 값을 정하지 않으면 기본값을 변수에 저장

    function 함수명(매개변수1 = 값1, 매개변수 = 값2,..){
        한수가 호출되었을 때 실행할 문장;
        ...
        return 값;
    }

    함수명();
    함수명(값1, 값2...); // 내가 선택한 개수만큼 변경


과제
주민등록번호 유효성 검사 프로그램을 자바스크립트로 구현
(입력은 prompt을 통해 저장)





























